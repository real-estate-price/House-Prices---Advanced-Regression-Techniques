#Импортируем таблицу сразу в numpy DataFrame
import pandas as pd
import numpy as np
train_dataframe = pd.read_csv('C:/Users/Elena/Downloads/data/train.csv', encoding="utf-8", delimiter=',')


train_dataframe['SalePrice < 129975'] = (train_dataframe['SalePrice'] <= 129975).astype(int)
train_dataframe['SalePrice < 163000'] = ((train_dataframe['SalePrice'] > 129975) & (train_dataframe['SalePrice'] <= 163000)).astype(int)
train_dataframe['SalePrice < 214000'] = ((train_dataframe['SalePrice'] > 163000) & (train_dataframe['SalePrice'] <= 214000)).astype(int)
train_dataframe['SalePrice > 214000'] = (train_dataframe['SalePrice'] > 214000).astype(int)
train_dataframe = train_dataframe.drop(columns = ['SalePrice'])



train_dataframe['MSSubClass = 20'] = (train_dataframe['MSSubClass'] == '20').astype(int)
train_dataframe['MSSubClass = 30'] = (train_dataframe['MSSubClass'] == '30').astype(int)
train_dataframe['MSSubClass = 40'] = (train_dataframe['MSSubClass'] == '40').astype(int)
train_dataframe['MSSubClass = 45'] = (train_dataframe['MSSubClass'] == '45').astype(int)
train_dataframe['MSSubClass = 50'] = (train_dataframe['MSSubClass'] == '50').astype(int)
train_dataframe['MSSubClass = 60'] = (train_dataframe['MSSubClass'] == '60').astype(int)
train_dataframe['MSSubClass = 70'] = (train_dataframe['MSSubClass'] == '70').astype(int)
train_dataframe['MSSubClass = 75'] = (train_dataframe['MSSubClass'] == '75').astype(int)
train_dataframe['MSSubClass = 80'] = (train_dataframe['MSSubClass'] == '80').astype(int)
train_dataframe['MSSubClass = 85'] = (train_dataframe['MSSubClass'] == '85').astype(int)
train_dataframe['MSSubClass = 90'] = (train_dataframe['MSSubClass'] == '90').astype(int)
train_dataframe['MSSubClass = 120'] = (train_dataframe['MSSubClass'] == '120').astype(int)
train_dataframe['MSSubClass = 150'] = (train_dataframe['MSSubClass'] == '150').astype(int)
train_dataframe['MSSubClass = 160'] = (train_dataframe['MSSubClass'] == '160').astype(int)
train_dataframe['MSSubClass = 180'] = (train_dataframe['MSSubClass'] == '180').astype(int)
train_dataframe['MSSubClass = 190'] = (train_dataframe['MSSubClass'] == '190').astype(int)
train_dataframe = train_dataframe.drop(columns = ['MSSubClass'])

train_dataframe['MSZoning is A'] = (train_dataframe['MSZoning'] == 'A').astype(int)
train_dataframe['MSZoning is C'] = (train_dataframe['MSZoning'] == 'C').astype(int)
train_dataframe['MSZoning is FV'] = (train_dataframe['MSZoning'] == 'FV').astype(int)
train_dataframe['MSZoning is I'] = (train_dataframe['MSZoning'] == 'I').astype(int)
train_dataframe['MSZoning is RH'] = (train_dataframe['MSZoning'] == 'RH').astype(int)
train_dataframe['MSZoning is RL'] = (train_dataframe['MSZoning'] == 'RL').astype(int)
train_dataframe['MSZoning is RP'] = (train_dataframe['MSZoning'] == 'RP').astype(int)
train_dataframe['MSZoning is RM'] = (train_dataframe['MSZoning'] == 'RM').astype(int)
train_dataframe = train_dataframe.drop(columns = ['MSZoning'])

train_dataframe['LotFrontage < 59'] = (train_dataframe['LotFrontage'] <= 59).astype(int)
train_dataframe['LotFrontage < 69'] = ((train_dataframe['LotFrontage'] > 59) & (train_dataframe['LotFrontage'] <= 69)).astype(int)
train_dataframe['LotFrontage < 80'] = ((train_dataframe['LotFrontage'] > 69) & (train_dataframe['LotFrontage'] <= 80)).astype(int)
train_dataframe['LotFrontage > 80'] = (train_dataframe['LotFrontage'] > 80).astype(int)
train_dataframe = train_dataframe.drop(columns = ['LotFrontage'])

train_dataframe['LotArea < 7553'] = (train_dataframe['LotArea'] <= 7553).astype(int)
train_dataframe['LotArea < 9478'] = ((train_dataframe['LotArea'] > 7553) & (train_dataframe['LotArea'] <= 9478)).astype(int)
train_dataframe['LotArea < 11601'] = ((train_dataframe['LotArea'] > 9478) & (train_dataframe['LotArea'] <= 11601)).astype(int)
train_dataframe['LotArea > 11601'] = (train_dataframe['LotArea'] > 11601).astype(int)
train_dataframe = train_dataframe.drop(columns = ['LotArea'])

#Значение признака Street один из двух вариантов. Я добавляю два столбца, для каждого объекта в одном из них 1, во втором 0.
#Удалила начальный стб Street
train_dataframe['Street is Pave'] = (train_dataframe['Street'] == 'Pave').astype(int)
train_dataframe['Street is Grvl'] = (train_dataframe['Street'] == 'Grvl').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Street'])

train_dataframe['Alley is Pave'] = (train_dataframe['Alley'] == 'Pave').astype(int)
train_dataframe['Alley is Grvl'] = (train_dataframe['Alley'] == 'Grvl').astype(int)
train_dataframe['Alley is NA'] = (train_dataframe['Alley'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Alley'])

train_dataframe['LotShape is Reg'] = (train_dataframe['LotShape'] == 'Reg').astype(int)
train_dataframe['LotShape is IR1'] = (train_dataframe['LotShape'] == 'IR1').astype(int)
train_dataframe['LotShape is IR2'] = (train_dataframe['LotShape'] == 'IR2').astype(int)
train_dataframe['LotShape is IR3'] = (train_dataframe['LotShape'] == 'IR3').astype(int)
train_dataframe = train_dataframe.drop(columns = ['LotShape'])

train_dataframe['LandContour is Lvl'] = (train_dataframe['LandContour'] == 'Lvl').astype(int)
train_dataframe['LandContour is Bnk'] = (train_dataframe['LandContour'] == 'Bnk').astype(int)
train_dataframe['LandContour is HLS'] = (train_dataframe['LandContour'] == 'HLS').astype(int)
train_dataframe['LandContour is Low'] = (train_dataframe['LandContour'] == 'Low').astype(int)
train_dataframe = train_dataframe.drop(columns = ['LandContour'])

train_dataframe['Utilities is AllPub'] = (train_dataframe['Utilities'] == 'AllPub').astype(int)
train_dataframe['Utilities is NoSewr'] = (train_dataframe['Utilities'] == 'NoSewr').astype(int)
train_dataframe['Utilities is NoSeWa'] = (train_dataframe['Utilities'] == 'NoSeWa').astype(int)
train_dataframe['Utilities is ELO'] = (train_dataframe['Utilities'] == 'ELO').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Utilities'])

train_dataframe['LotConfig is Inside'] = (train_dataframe['LotConfig'] == 'Inside').astype(int)
train_dataframe['LotConfig is Corner'] = (train_dataframe['LotConfig'] == 'Corner').astype(int)
train_dataframe['LotConfig is CulDSac'] = (train_dataframe['LotConfig'] == 'CulDSac').astype(int)
train_dataframe['LotConfig is FR2'] = (train_dataframe['LotConfig'] == 'FR2').astype(int)
train_dataframe['LotConfig is FR3'] = (train_dataframe['LotConfig'] == 'FR3').astype(int)
train_dataframe = train_dataframe.drop(columns = ['LotConfig'])

train_dataframe['LandSlope is Gtl'] = (train_dataframe['LandSlope'] == 'Gtl').astype(int)
train_dataframe['LandSlope is Mod'] = (train_dataframe['LandSlope'] == 'Mod').astype(int)
train_dataframe['LandSlope is Sev'] = (train_dataframe['LandSlope'] == 'Sev').astype(int)
train_dataframe = train_dataframe.drop(columns = ['LandSlope'])

train_dataframe['Neighborhood is Blmngtn'] = (train_dataframe['Neighborhood'] == 'Blmngtn').astype(int)
train_dataframe['Neighborhood is Blueste'] = (train_dataframe['Neighborhood'] == 'Blueste').astype(int)
train_dataframe['Neighborhood is BrDale'] = (train_dataframe['Neighborhood'] == 'BrDale').astype(int)
train_dataframe['Neighborhood is BrkSide'] = (train_dataframe['Neighborhood'] == 'BrkSide').astype(int)
train_dataframe['Neighborhood is ClearCr'] = (train_dataframe['Neighborhood'] == 'ClearCr').astype(int)
train_dataframe['Neighborhood is CollgCr'] = (train_dataframe['Neighborhood'] == 'CollgCr').astype(int)
train_dataframe['Neighborhood is Crawfor'] = (train_dataframe['Neighborhood'] == 'Crawfor').astype(int)
train_dataframe['Neighborhood is Edwards'] = (train_dataframe['Neighborhood'] == 'Edwards').astype(int)
train_dataframe['Neighborhood is Gilbert'] = (train_dataframe['Neighborhood'] == 'Gilbert').astype(int)
train_dataframe['Neighborhood is IDOTRR'] = (train_dataframe['Neighborhood'] == 'IDOTRR').astype(int)
train_dataframe['Neighborhood is MeadowV'] = (train_dataframe['Neighborhood'] == 'MeadowV').astype(int)
train_dataframe['Neighborhood is Mitchel'] = (train_dataframe['Neighborhood'] == 'Mitchel').astype(int)
train_dataframe['Neighborhood is Names'] = (train_dataframe['Neighborhood'] == 'Names').astype(int)
train_dataframe['Neighborhood is NoRidge'] = (train_dataframe['Neighborhood'] == 'NoRidge').astype(int)
train_dataframe['Neighborhood is NPkVill'] = (train_dataframe['Neighborhood'] == 'NPkVill').astype(int)
train_dataframe['Neighborhood is NridgHt'] = (train_dataframe['Neighborhood'] == 'NridgHt').astype(int)
train_dataframe['Neighborhood is NWAmes'] = (train_dataframe['Neighborhood'] == 'NWAmes').astype(int)
train_dataframe['Neighborhood is OldTown'] = (train_dataframe['Neighborhood'] == 'OldTown').astype(int)
train_dataframe['Neighborhood is SWISU'] = (train_dataframe['Neighborhood'] == 'SWISU').astype(int)
train_dataframe['Neighborhood is Sawyer'] = (train_dataframe['Neighborhood'] == 'Sawyer').astype(int)
train_dataframe['Neighborhood is SawyerW'] = (train_dataframe['Neighborhood'] == 'SawyerW').astype(int)
train_dataframe['Neighborhood is Somerst'] = (train_dataframe['Neighborhood'] == 'Somerst').astype(int)
train_dataframe['Neighborhood is StoneBr'] = (train_dataframe['Neighborhood'] == 'StoneBr').astype(int)
train_dataframe['Neighborhood is Timber'] = (train_dataframe['Neighborhood'] == 'Timber').astype(int)
train_dataframe['Neighborhood is Veenker'] = (train_dataframe['Neighborhood'] == 'Veenker').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Neighborhood'])

train_dataframe['Condition1 is Artery'] = (train_dataframe['Condition1'] == 'Artery').astype(int)
train_dataframe['Condition1 is Feedr'] = (train_dataframe['Condition1'] == 'Feedr').astype(int)
train_dataframe['Condition1 is Norm'] = (train_dataframe['Condition1'] == 'Norm').astype(int)
train_dataframe['Condition1 is RRNn'] = (train_dataframe['Condition1'] == 'RRNn').astype(int)
train_dataframe['Condition1 is RRAn'] = (train_dataframe['Condition1'] == 'RRAn').astype(int)
train_dataframe['Condition1 is PosN'] = (train_dataframe['Condition1'] == 'PosN').astype(int)
train_dataframe['Condition1 is PosA'] = (train_dataframe['Condition1'] == 'PosA').astype(int)
train_dataframe['Condition1 is RRNe'] = (train_dataframe['Condition1'] == 'RRNe').astype(int)
train_dataframe['Condition1 is RRAe'] = (train_dataframe['Condition1'] == 'RRAe').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Condition1'])

train_dataframe['Condition2 is Artery'] = (train_dataframe['Condition2'] == 'Artery').astype(int)
train_dataframe['Condition2 is Feedr'] = (train_dataframe['Condition2'] == 'Feedr').astype(int)
train_dataframe['Condition2 is Norm'] = (train_dataframe['Condition2'] == 'Norm').astype(int)
train_dataframe['Condition2 is RRNn'] = (train_dataframe['Condition2'] == 'RRNn').astype(int)
train_dataframe['Condition2 is RRAn'] = (train_dataframe['Condition2'] == 'RRAn').astype(int)
train_dataframe['Condition2 is PosN'] = (train_dataframe['Condition2'] == 'PosN').astype(int)
train_dataframe['Condition2 is PosA'] = (train_dataframe['Condition2'] == 'PosA').astype(int)
train_dataframe['Condition2 is RRNe'] = (train_dataframe['Condition2'] == 'RRNe').astype(int)
train_dataframe['Condition2 is RRAe'] = (train_dataframe['Condition2'] == 'RRAe').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Condition2'])

train_dataframe['BldgType is 1Fam'] = (train_dataframe['BldgType'] == '1Fam').astype(int)
train_dataframe['BldgType is 2FmCon'] = (train_dataframe['BldgType'] == '2FmCon').astype(int)
train_dataframe['BldgType is Duplx'] = (train_dataframe['BldgType'] == 'Duplx').astype(int)
train_dataframe['BldgType is TwnhsE'] = (train_dataframe['BldgType'] == 'TwnhsE').astype(int)
train_dataframe['BldgType is TwnhsI'] = (train_dataframe['BldgType'] == 'TwnhsI').astype(int)
train_dataframe = train_dataframe.drop(columns = ['BldgType'])

train_dataframe['HouseStyle is 1Story'] = (train_dataframe['HouseStyle'] == '1Story').astype(int)
train_dataframe['HouseStyle is 1.5Fin'] = (train_dataframe['HouseStyle'] == '1.5Fin').astype(int)
train_dataframe['HouseStyle is 1.5Unf'] = (train_dataframe['HouseStyle'] == '1.5Unf').astype(int)
train_dataframe['HouseStyle is 2Story'] = (train_dataframe['HouseStyle'] == '2Story').astype(int)
train_dataframe['HouseStyle is 2.5Fin'] = (train_dataframe['HouseStyle'] == '2.5Fin').astype(int)
train_dataframe['HouseStyle is 2.5Unf'] = (train_dataframe['HouseStyle'] == '2.5Unf').astype(int)
train_dataframe['HouseStyle is SFoyer'] = (train_dataframe['HouseStyle'] == 'SFoyer').astype(int)
train_dataframe['HouseStyle is SLvl'] = (train_dataframe['HouseStyle'] == 'SLvl').astype(int)
train_dataframe = train_dataframe.drop(columns = ['HouseStyle'])

train_dataframe['OverallQual is 10'] = (train_dataframe['OverallQual'] == '10').astype(int)
train_dataframe['OverallQual is 9'] = (train_dataframe['OverallQual'] == '9').astype(int)
train_dataframe['OverallQual is 8'] = (train_dataframe['OverallQual'] == '8').astype(int)
train_dataframe['OverallQual is 7'] = (train_dataframe['OverallQual'] == '7').astype(int)
train_dataframe['OverallQual is 6'] = (train_dataframe['OverallQual'] == '6').astype(int)
train_dataframe['OverallQual is 5'] = (train_dataframe['OverallQual'] == '5').astype(int)
train_dataframe['OverallQual is 4'] = (train_dataframe['OverallQual'] == '4').astype(int)
train_dataframe['OverallQual is 3'] = (train_dataframe['OverallQual'] == '3').astype(int)
train_dataframe['OverallQual is 2'] = (train_dataframe['OverallQual'] == '2').astype(int)
train_dataframe['OverallQual is 1'] = (train_dataframe['OverallQual'] == '1').astype(int)
train_dataframe = train_dataframe.drop(columns = ['OverallQual'])

train_dataframe['OverallCond is 10'] = (train_dataframe['OverallCond'] == '10').astype(int)
train_dataframe['OverallCond is 9'] = (train_dataframe['OverallCond'] == '9').astype(int)
train_dataframe['OverallCond is 8'] = (train_dataframe['OverallCond'] == '8').astype(int)
train_dataframe['OverallCond is 7'] = (train_dataframe['OverallCond'] == '7').astype(int)
train_dataframe['OverallCond is 6'] = (train_dataframe['OverallCond'] == '6').astype(int)
train_dataframe['OverallCond is 5'] = (train_dataframe['OverallCond'] == '5').astype(int)
train_dataframe['OverallCond is 4'] = (train_dataframe['OverallCond'] == '4').astype(int)
train_dataframe['OverallCond is 3'] = (train_dataframe['OverallCond'] == '3').astype(int)
train_dataframe['OverallCond is 2'] = (train_dataframe['OverallCond'] == '2').astype(int)
train_dataframe['OverallCond is 1'] = (train_dataframe['OverallCond'] == '1').astype(int)
train_dataframe = train_dataframe.drop(columns = ['OverallCond'])

train_dataframe['YearBuilt < 1954'] = (train_dataframe['YearBuilt'] <= 1954).astype(int)
train_dataframe['YearBuilt < 1973'] = ((train_dataframe['YearBuilt'] > 1954) & (train_dataframe['YearBuilt'] <= 1973)).astype(int)
train_dataframe['YearBuilt < 2000'] = ((train_dataframe['YearBuilt'] > 1973) & (train_dataframe['YearBuilt'] <= 2000)).astype(int)
train_dataframe['YearBuilt < 2010'] = ((train_dataframe['YearBuilt'] > 2000) & (train_dataframe['YearBuilt'] <= 2010)).astype(int)
train_dataframe['YearBuilt > 2010'] = (train_dataframe['YearBuilt'] > 2010).astype(int)
train_dataframe = train_dataframe.drop(columns = ['YearBuilt'])

train_dataframe['YearRemodAdd < 1950'] = (train_dataframe['YearRemodAdd'] <= 1950).astype(int)
train_dataframe['YearRemodAdd < 1967'] = ((train_dataframe['YearRemodAdd'] > 1950) & (train_dataframe['YearRemodAdd'] <= 1967)).astype(int)
train_dataframe['YearRemodAdd < 1994'] = ((train_dataframe['YearRemodAdd'] > 1967) & (train_dataframe['YearRemodAdd'] <= 1994)).astype(int)
train_dataframe['YearRemodAdd < 2004'] = ((train_dataframe['YearRemodAdd'] > 1994) & (train_dataframe['YearRemodAdd'] <= 2004)).astype(int)
train_dataframe['YearRemodAdd > 2004'] = (train_dataframe['YearRemodAdd'] > 2004).astype(int)
train_dataframe = train_dataframe.drop(columns = ['YearRemodAdd'])

train_dataframe['RoofStyle is Flat'] = (train_dataframe['RoofStyle'] == 'Flat').astype(int)
train_dataframe['RoofStyle is Gable'] = (train_dataframe['RoofStyle'] == 'Gable').astype(int)
train_dataframe['RoofStyle is Gambrel'] = (train_dataframe['RoofStyle'] == 'Gambrel').astype(int)
train_dataframe['RoofStyle is Hip'] = (train_dataframe['RoofStyle'] == 'Hip').astype(int)
train_dataframe['RoofStyle is Mansard'] = (train_dataframe['RoofStyle'] == 'Mansard').astype(int)
train_dataframe['RoofStyle is Shed'] = (train_dataframe['RoofStyle'] == 'Shed').astype(int)
train_dataframe = train_dataframe.drop(columns = ['RoofStyle'])

train_dataframe['RoofMatl is ClyTile'] = (train_dataframe['RoofMatl'] == 'ClyTile').astype(int)
train_dataframe['RoofMatl is CompShg'] = (train_dataframe['RoofMatl'] == 'CompShg').astype(int)
train_dataframe['RoofMatl is Membran'] = (train_dataframe['RoofMatl'] == 'Membran').astype(int)
train_dataframe['RoofMatl is Metal'] = (train_dataframe['RoofMatl'] == 'Metal').astype(int)
train_dataframe['RoofMatl is Roll'] = (train_dataframe['RoofMatl'] == 'Roll').astype(int)
train_dataframe['RoofMatl is Tar&Grv'] = (train_dataframe['RoofMatl'] == 'Tar&Grv').astype(int)
train_dataframe['RoofMatl is WdShake'] = (train_dataframe['RoofMatl'] == 'WdShake').astype(int)
train_dataframe['RoofMatl is WdShngl'] = (train_dataframe['RoofMatl'] == 'WdShngl').astype(int)
train_dataframe = train_dataframe.drop(columns = ['RoofMatl'])

train_dataframe['Exterior1st is AsbShng'] = (train_dataframe['Exterior1st'] == 'AsbShng').astype(int)
train_dataframe['Exterior1st is AsphShn'] = (train_dataframe['Exterior1st'] == 'AsphShn').astype(int)
train_dataframe['Exterior1st is BrkComm'] = (train_dataframe['Exterior1st'] == 'BrkComm').astype(int)
train_dataframe['Exterior1st is BrkFace'] = (train_dataframe['Exterior1st'] == 'BrkFace').astype(int)
train_dataframe['Exterior1st is CBlock'] = (train_dataframe['Exterior1st'] == 'CBlock').astype(int)
train_dataframe['Exterior1st is CemntBd'] = (train_dataframe['Exterior1st'] == 'CemntBd').astype(int)
train_dataframe['Exterior1st is HdBoard'] = (train_dataframe['Exterior1st'] == 'HdBoard').astype(int)
train_dataframe['Exterior1st is ImStucc'] = (train_dataframe['Exterior1st'] == 'ImStucc').astype(int)
train_dataframe['Exterior1st is MetalSd'] = (train_dataframe['Exterior1st'] == 'MetalSd').astype(int)
train_dataframe['Exterior1st is Other'] = (train_dataframe['Exterior1st'] == 'Other').astype(int)
train_dataframe['Exterior1st is Plywood'] = (train_dataframe['Exterior1st'] == 'Plywood').astype(int)
train_dataframe['Exterior1st is PreCast'] = (train_dataframe['Exterior1st'] == 'PreCast').astype(int)
train_dataframe['Exterior1st is Stone'] = (train_dataframe['Exterior1st'] == 'Stone').astype(int)
train_dataframe['Exterior1st is Stucco'] = (train_dataframe['Exterior1st'] == 'Stucco').astype(int)
train_dataframe['Exterior1st is VinylSd'] = (train_dataframe['Exterior1st'] == 'VinylSd').astype(int)
train_dataframe['Exterior1st is Wd Sdng'] = (train_dataframe['Exterior1st'] == 'Wd Sdng').astype(int)
train_dataframe['Exterior1st is WdShing'] = (train_dataframe['Exterior1st'] == 'WdShing').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Exterior1st'])

train_dataframe['Exterior2nd is AsbShng'] = (train_dataframe['Exterior2nd'] == 'AsbShng').astype(int)
train_dataframe['Exterior2nd is AsphShn'] = (train_dataframe['Exterior2nd'] == 'AsphShn').astype(int)
train_dataframe['Exterior2nd is BrkComm'] = (train_dataframe['Exterior2nd'] == 'BrkComm').astype(int)
train_dataframe['Exterior2nd is BrkFace'] = (train_dataframe['Exterior2nd'] == 'BrkFace').astype(int)
train_dataframe['Exterior2nd is CBlock'] = (train_dataframe['Exterior2nd'] == 'CBlock').astype(int)
train_dataframe['Exterior2nd is CemntBd'] = (train_dataframe['Exterior2nd'] == 'CemntBd').astype(int)
train_dataframe['Exterior2nd is HdBoard'] = (train_dataframe['Exterior2nd'] == 'HdBoard').astype(int)
train_dataframe['Exterior2nd is ImStucc'] = (train_dataframe['Exterior2nd'] == 'ImStucc').astype(int)
train_dataframe['Exterior2nd is MetalSd'] = (train_dataframe['Exterior2nd'] == 'MetalSd').astype(int)
train_dataframe['Exterior2nd is Other'] = (train_dataframe['Exterior2nd'] == 'Other').astype(int)
train_dataframe['Exterior2nd is Plywood'] = (train_dataframe['Exterior2nd'] == 'Plywood').astype(int)
train_dataframe['Exterior2nd is PreCast'] = (train_dataframe['Exterior2nd'] == 'PreCast').astype(int)
train_dataframe['Exterior2nd is Stone'] = (train_dataframe['Exterior2nd'] == 'Stone').astype(int)
train_dataframe['Exterior2nd is Stucco'] = (train_dataframe['Exterior2nd'] == 'Stucco').astype(int)
train_dataframe['Exterior2nd is VinylSd'] = (train_dataframe['Exterior2nd'] == 'VinylSd').astype(int)
train_dataframe['Exterior2nd is Wd Sdng'] = (train_dataframe['Exterior2nd'] == 'Wd Sdng').astype(int)
train_dataframe['Exterior2nd is WdShing'] = (train_dataframe['Exterior2nd'] == 'WdShing').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Exterior2nd'])

train_dataframe['MasVnrType is BrkCmn'] = (train_dataframe['MasVnrType'] == 'BrkCmn').astype(int)
train_dataframe['MasVnrType is BrkFace'] = (train_dataframe['MasVnrType'] == 'BrkFace').astype(int)
train_dataframe['MasVnrType is CBlock'] = (train_dataframe['MasVnrType'] == 'CBlock').astype(int)
train_dataframe['MasVnrType is None'] = (train_dataframe['MasVnrType'] == 'None').astype(int)
train_dataframe['MasVnrType is Stone'] = (train_dataframe['MasVnrType'] == 'Stone').astype(int)
train_dataframe = train_dataframe.drop(columns = ['MasVnrType'])

train_dataframe['MasVnrArea < 167'] = (train_dataframe['MasVnrArea'] <= 167).astype(int)
train_dataframe['MasVnrArea > 167'] = (train_dataframe['MasVnrArea'] > 167).astype(int)
train_dataframe = train_dataframe.drop(columns = ['MasVnrArea'])

train_dataframe['ExterQual is Ex'] = (train_dataframe['ExterQual'] == 'Ex').astype(int)
train_dataframe['ExterQual is Gd'] = (train_dataframe['ExterQual'] == 'Gd').astype(int)
train_dataframe['ExterQual is TA'] = (train_dataframe['ExterQual'] == 'TA').astype(int)
train_dataframe['ExterQual is Fa'] = (train_dataframe['ExterQual'] == 'Fa').astype(int)
train_dataframe['ExterQual is Po'] = (train_dataframe['ExterQual'] == 'Po').astype(int)
train_dataframe = train_dataframe.drop(columns = ['ExterQual'])

train_dataframe['ExterCond is Ex'] = (train_dataframe['ExterCond'] == 'Ex').astype(int)
train_dataframe['ExterCond is Gd'] = (train_dataframe['ExterCond'] == 'Gd').astype(int)
train_dataframe['ExterCond is TA'] = (train_dataframe['ExterCond'] == 'TA').astype(int)
train_dataframe['ExterCond is Fa'] = (train_dataframe['ExterCond'] == 'Fa').astype(int)
train_dataframe['ExterCond is Po'] = (train_dataframe['ExterCond'] == 'Po').astype(int)
train_dataframe = train_dataframe.drop(columns = ['ExterCond'])

train_dataframe['Foundation is BrkTil'] = (train_dataframe['Foundation'] == 'BrkTil').astype(int)
train_dataframe['Foundation is CBlock'] = (train_dataframe['Foundation'] == 'CBlock').astype(int)
train_dataframe['Foundation is PConc'] = (train_dataframe['Foundation'] == 'PConc').astype(int)
train_dataframe['Foundation is Slab'] = (train_dataframe['Foundation'] == 'Slab').astype(int)
train_dataframe['Foundation is Stone'] = (train_dataframe['Foundation'] == 'Stone').astype(int)
train_dataframe['Foundation is Wood'] = (train_dataframe['Foundation'] == 'Wood').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Foundation'])

train_dataframe['BsmtQual is Ex'] = (train_dataframe['BsmtQual'] == 'Ex').astype(int)
train_dataframe['BsmtQual is Gd'] = (train_dataframe['BsmtQual'] == 'Gd').astype(int)
train_dataframe['BsmtQual is TA'] = (train_dataframe['BsmtQual'] == 'TA').astype(int)
train_dataframe['BsmtQual is Fa'] = (train_dataframe['BsmtQual'] == 'Fa').astype(int)
train_dataframe = train_dataframe.drop(columns = ['BsmtQual'])

train_dataframe['BsmtCond is Ex'] = (train_dataframe['BsmtCond'] == 'Ex').astype(int)
train_dataframe['BsmtCond is Gd'] = (train_dataframe['BsmtCond'] == 'Gd').astype(int)
train_dataframe['BsmtCond is TA'] = (train_dataframe['BsmtCond'] == 'TA').astype(int)
train_dataframe['BsmtCond is Fa'] = (train_dataframe['BsmtCond'] == 'Fa').astype(int)
train_dataframe['BsmtCond is Po'] = (train_dataframe['BsmtCond'] == 'Po').astype(int)
train_dataframe['BsmtCond is NA'] = (train_dataframe['BsmtCond'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['BsmtCond'])

train_dataframe['BsmtExposure is Gd'] = (train_dataframe['BsmtExposure'] == 'Gd').astype(int)
train_dataframe['BsmtExposure is Av'] = (train_dataframe['BsmtExposure'] == 'Av').astype(int)
train_dataframe['BsmtExposure is Mn'] = (train_dataframe['BsmtExposure'] == 'Mn').astype(int)
train_dataframe['BsmtExposure is No'] = (train_dataframe['BsmtExposure'] == 'No').astype(int)
train_dataframe['BsmtExposure is NA'] = (train_dataframe['BsmtExposure'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['BsmtExposure'])

train_dataframe['BsmtFinType1 is GLQ'] = (train_dataframe['BsmtFinType1'] == 'GLQ').astype(int)
train_dataframe['BsmtFinType1 is ALQ'] = (train_dataframe['BsmtFinType1'] == 'ALQ').astype(int)
train_dataframe['BsmtFinType1 is BLQ'] = (train_dataframe['BsmtFinType1'] == 'BLQ').astype(int)
train_dataframe['BsmtFinType1 is Rec'] = (train_dataframe['BsmtFinType1'] == 'Rec').astype(int)
train_dataframe['BsmtFinType1 is LwQ'] = (train_dataframe['BsmtFinType1'] == 'LwQ').astype(int)
train_dataframe['BsmtFinType1 is Unf'] = (train_dataframe['BsmtFinType1'] == 'Unf').astype(int)
train_dataframe['BsmtFinType1 is NA'] = (train_dataframe['BsmtFinType1'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['BsmtFinType1'])

train_dataframe['BsmtFinSF1 < 383'] = (train_dataframe['BsmtFinSF1'] <= 383).astype(int)
train_dataframe['BsmtFinSF1 < 712'] = ((train_dataframe['BsmtFinSF1'] > 383) & (train_dataframe['BsmtFinSF1'] <= 712)).astype(int)
train_dataframe['BsmtFinSF1 < 5644'] = ((train_dataframe['BsmtFinSF1'] > 712) & (train_dataframe['BsmtFinSF1'] <= 5644)).astype(int)
train_dataframe['BsmtFinSF1 > 5644'] = (train_dataframe['BsmtFinSF1'] > 5644).astype(int)
train_dataframe = train_dataframe.drop(columns = ['BsmtFinSF1'])

train_dataframe['BsmtFinType2 is GLQ'] = (train_dataframe['BsmtFinType2'] == 'GLQ').astype(int)
train_dataframe['BsmtFinType2 is ALQ'] = (train_dataframe['BsmtFinType2'] == 'ALQ').astype(int)
train_dataframe['BsmtFinType2 is BLQ'] = (train_dataframe['BsmtFinType2'] == 'BLQ').astype(int)
train_dataframe['BsmtFinType2 is Rec'] = (train_dataframe['BsmtFinType2'] == 'Rec').astype(int)
train_dataframe['BsmtFinType2 is LwQ'] = (train_dataframe['BsmtFinType2'] == 'LwQ').astype(int)
train_dataframe['BsmtFinType2 is Unf'] = (train_dataframe['BsmtFinType2'] == 'Unf').astype(int)
train_dataframe['BsmtFinType2 is NA'] = (train_dataframe['BsmtFinType2'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['BsmtFinType2'])

train_dataframe['BsmtFinSF2 < 383'] = (train_dataframe['BsmtFinSF2'] <= 383).astype(int)
train_dataframe['BsmtFinSF2 < 712'] = ((train_dataframe['BsmtFinSF2'] > 383) & (train_dataframe['BsmtFinSF2'] <= 712)).astype(int)
train_dataframe['BsmtFinSF2 < 5644'] = ((train_dataframe['BsmtFinSF2'] > 712) & (train_dataframe['BsmtFinSF2'] <= 5644)).astype(int)
train_dataframe['BsmtFinSF2 > 5644'] = (train_dataframe['BsmtFinSF2'] > 5644).astype(int)
train_dataframe = train_dataframe.drop(columns = ['BsmtFinSF2'])

train_dataframe['BsmtUnfSF < 223'] = (train_dataframe['BsmtUnfSF'] <= 223).astype(int)
train_dataframe['BsmtUnfSF < 477'] = ((train_dataframe['BsmtUnfSF'] > 223) & (train_dataframe['BsmtUnfSF'] <= 477)).astype(int)
train_dataframe['BsmtUnfSF < 808'] = ((train_dataframe['BsmtUnfSF'] > 477) & (train_dataframe['BsmtUnfSF'] <= 808)).astype(int)
train_dataframe['BsmtUnfSF > 5644'] = (train_dataframe['BsmtUnfSF'] > 808).astype(int)
train_dataframe = train_dataframe.drop(columns = ['BsmtUnfSF'])

train_dataframe['TotalBsmtSF < 795'] = (train_dataframe['TotalBsmtSF'] <= 795).astype(int)
train_dataframe['TotalBsmtSF < 991'] = ((train_dataframe['TotalBsmtSF'] > 795) & (train_dataframe['TotalBsmtSF'] <= 991)).astype(int)
train_dataframe['TotalBsmtSF < 1298'] = ((train_dataframe['TotalBsmtSF'] > 991) & (train_dataframe['TotalBsmtSF'] <= 1298)).astype(int)
train_dataframe['TotalBsmtSF > 1298'] = (train_dataframe['TotalBsmtSF'] > 1298).astype(int)
train_dataframe = train_dataframe.drop(columns = ['TotalBsmtSF'])

train_dataframe['Heating is Floor'] = (train_dataframe['Heating'] == 'Floor').astype(int)
train_dataframe['Heating is GasA'] = (train_dataframe['Heating'] == 'GasA').astype(int)
train_dataframe['Heating is GasW'] = (train_dataframe['Heating'] == 'GasW').astype(int)
train_dataframe['Heating is Grav'] = (train_dataframe['Heating'] == 'Grav').astype(int)
train_dataframe['Heating is OthW'] = (train_dataframe['Heating'] == 'OthW').astype(int)
train_dataframe['Heating is Wall'] = (train_dataframe['Heating'] == 'Wall').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Heating'])

train_dataframe['HeatingQC is Ex'] = (train_dataframe['HeatingQC'] == 'Ex').astype(int)
train_dataframe['HeatingQC is Gd'] = (train_dataframe['HeatingQC'] == 'Gd').astype(int)
train_dataframe['HeatingQC is TA'] = (train_dataframe['HeatingQC'] == 'TA').astype(int)
train_dataframe['HeatingQC is Fa'] = (train_dataframe['HeatingQC'] == 'Fa').astype(int)
train_dataframe['HeatingQC is Po'] = (train_dataframe['HeatingQC'] == 'Po').astype(int)
train_dataframe = train_dataframe.drop(columns = ['HeatingQC'])

train_dataframe['CentralAir is N'] = (train_dataframe['CentralAir'] == 'N').astype(int)
train_dataframe['CentralAir is Y'] = (train_dataframe['CentralAir'] == 'Y').astype(int)
train_dataframe = train_dataframe.drop(columns = ['CentralAir'])

train_dataframe['Electrical is SBrkr'] = (train_dataframe['Electrical'] == 'SBrkr').astype(int)
train_dataframe['Electrical is FuseA'] = (train_dataframe['Electrical'] == 'FuseA').astype(int)
train_dataframe['Electrical is FuseF'] = (train_dataframe['Electrical'] == 'FuseF').astype(int)
train_dataframe['Electrical is FuseP'] = (train_dataframe['Electrical'] == 'FuseP').astype(int)
train_dataframe['Electrical is Mix'] = (train_dataframe['Electrical'] == 'Mix').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Electrical'])

train_dataframe['1stFlrSF < 882'] = (train_dataframe['1stFlrSF'] <= 882).astype(int)
train_dataframe['1stFlrSF < 1087'] = ((train_dataframe['1stFlrSF'] > 882) & (train_dataframe['1stFlrSF'] <= 1087)).astype(int)
train_dataframe['1stFlrSF < 1391'] = ((train_dataframe['1stFlrSF'] > 1087) & (train_dataframe['1stFlrSF'] <= 1391)).astype(int)
train_dataframe['1stFlrSF > 1391'] = (train_dataframe['1stFlrSF'] > 1391).astype(int)
train_dataframe = train_dataframe.drop(columns = ['1stFlrSF'])

train_dataframe['2ndFlrSF < 728'] = (train_dataframe['2ndFlrSF'] <= 728).astype(int)
train_dataframe['2ndFlrSF > 728'] = (train_dataframe['2ndFlrSF'] > 728).astype(int)
train_dataframe = train_dataframe.drop(columns = ['2ndFlrSF'])

train_dataframe['LowQualFinSF < 500'] = (train_dataframe['LowQualFinSF'] <= 500).astype(int)
train_dataframe['LowQualFinSF > 500'] = (train_dataframe['LowQualFinSF'] > 500).astype(int)
train_dataframe = train_dataframe.drop(columns = ['LowQualFinSF'])

train_dataframe['GrLivArea < 1129'] = (train_dataframe['GrLivArea'] <= 1129).astype(int)
train_dataframe['GrLivArea < 1464'] = ((train_dataframe['GrLivArea'] > 1129) & (train_dataframe['GrLivArea'] <= 1464)).astype(int)
train_dataframe['GrLivArea < 1776'] = ((train_dataframe['GrLivArea'] > 1464) & (train_dataframe['GrLivArea'] <= 1776)).astype(int)
train_dataframe['GrLivArea > 1776'] = (train_dataframe['GrLivArea'] > 1776).astype(int)
train_dataframe = train_dataframe.drop(columns = ['GrLivArea'])

train_dataframe['BsmtFullBath < 1'] = (train_dataframe['BsmtFullBath'] <= 1).astype(int)
train_dataframe['BsmtFullBath > 1'] = (train_dataframe['BsmtFullBath'] > 1).astype(int)
train_dataframe = train_dataframe.drop(columns = ['BsmtFullBath'])

train_dataframe['BsmtHalfBath < 1'] = (train_dataframe['BsmtHalfBath'] <= 1).astype(int)
train_dataframe['BsmtHalfBath > 1'] = (train_dataframe['BsmtHalfBath'] > 1).astype(int)
train_dataframe = train_dataframe.drop(columns = ['BsmtHalfBath'])

train_dataframe['FullBath < 1'] = (train_dataframe['FullBath'] <= 1).astype(int)
train_dataframe['FullBath < 2'] = ((train_dataframe['FullBath'] > 1) & (train_dataframe['FullBath'] <= 2)).astype(int)
train_dataframe['FullBath > 2'] = (train_dataframe['FullBath'] > 2).astype(int)
train_dataframe = train_dataframe.drop(columns = ['FullBath'])

train_dataframe['HalfBath < 1'] = (train_dataframe['HalfBath'] <= 1).astype(int)
train_dataframe['HalfBath > 1'] = (train_dataframe['HalfBath'] > 1).astype(int)
train_dataframe = train_dataframe.drop(columns = ['HalfBath'])

train_dataframe['BedroomAbvGr < 2'] = (train_dataframe['BedroomAbvGr'] <= 2).astype(int)
train_dataframe['BedroomAbvGr < 3'] = ((train_dataframe['BedroomAbvGr'] > 2) & (train_dataframe['BedroomAbvGr'] <= 3)).astype(int)
train_dataframe['BedroomAbvGr > 3'] = (train_dataframe['BedroomAbvGr'] > 3).astype(int)
train_dataframe = train_dataframe.drop(columns = ['BedroomAbvGr'])

train_dataframe['KitchenAbvGr < 1'] = (train_dataframe['KitchenAbvGr'] <= 1).astype(int)
train_dataframe['KitchenAbvGr > 1'] = (train_dataframe['KitchenAbvGr'] > 1).astype(int)
train_dataframe = train_dataframe.drop(columns = ['KitchenAbvGr'])

train_dataframe['KitchenQual is Ex'] = (train_dataframe['KitchenQual'] == 'Ex').astype(int)
train_dataframe['KitchenQual is Gd'] = (train_dataframe['KitchenQual'] == 'Gd').astype(int)
train_dataframe['KitchenQual is TA'] = (train_dataframe['KitchenQual'] == 'TA').astype(int)
train_dataframe['KitchenQual is Fa'] = (train_dataframe['KitchenQual'] == 'Fa').astype(int)
train_dataframe['KitchenQual is Po'] = (train_dataframe['KitchenQual'] == 'Po').astype(int)
train_dataframe = train_dataframe.drop(columns = ['KitchenQual'])

train_dataframe['TotRmsAbvGrd < 5'] = (train_dataframe['TotRmsAbvGrd'] <= 5).astype(int)
train_dataframe['TotRmsAbvGrd < 6'] = ((train_dataframe['TotRmsAbvGrd'] > 5) & (train_dataframe['TotRmsAbvGrd'] <= 6)).astype(int)
train_dataframe['TotRmsAbvGrd < 7'] = ((train_dataframe['TotRmsAbvGrd'] > 6) & (train_dataframe['TotRmsAbvGrd'] <= 7)).astype(int)
train_dataframe['TotRmsAbvGrd > 7'] = (train_dataframe['TotRmsAbvGrd'] > 7).astype(int)
train_dataframe = train_dataframe.drop(columns = ['TotRmsAbvGrd'])

train_dataframe['Functional is Typ'] = (train_dataframe['Functional'] == 'Typ').astype(int)
train_dataframe['Functional is Min1'] = (train_dataframe['Functional'] == 'Min1').astype(int)
train_dataframe['Functional is Min2'] = (train_dataframe['Functional'] == 'Min2').astype(int)
train_dataframe['Functional is Mod'] = (train_dataframe['Functional'] == 'Mod').astype(int)
train_dataframe['Functional is Maj1'] = (train_dataframe['Functional'] == 'Maj1').astype(int)
train_dataframe['Functional is Maj2'] = (train_dataframe['Functional'] == 'Maj2').astype(int)
train_dataframe['Functional is Sev'] = (train_dataframe['Functional'] == 'Sev').astype(int)
train_dataframe['Functional is Sal'] = (train_dataframe['Functional'] == 'Sal').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Functional'])

train_dataframe['Fireplaces < 1'] = (train_dataframe['Fireplaces'] <= 1).astype(int)
train_dataframe['Fireplaces > 1'] = (train_dataframe['Fireplaces'] > 1).astype(int)
train_dataframe = train_dataframe.drop(columns = ['Fireplaces'])

train_dataframe['FireplaceQu is Ex'] = (train_dataframe['FireplaceQu'] == 'Ex').astype(int)
train_dataframe['FireplaceQu is Gd'] = (train_dataframe['FireplaceQu'] == 'Gd').astype(int)
train_dataframe['FireplaceQu is TA'] = (train_dataframe['FireplaceQu'] == 'TA').astype(int)
train_dataframe['FireplaceQu is Fa'] = (train_dataframe['FireplaceQu'] == 'Fa').astype(int)
train_dataframe['FireplaceQu is Po'] = (train_dataframe['FireplaceQu'] == 'Po').astype(int)
train_dataframe = train_dataframe.drop(columns = ['FireplaceQu'])

train_dataframe['GarageType is 2Types'] = (train_dataframe['GarageType'] == '2Types').astype(int)
train_dataframe['GarageType is Attchd'] = (train_dataframe['GarageType'] == 'Attchd').astype(int)
train_dataframe['GarageType is Basment'] = (train_dataframe['GarageType'] == 'Basment').astype(int)
train_dataframe['GarageType is BuiltIn'] = (train_dataframe['GarageType'] == 'BuiltIn').astype(int)
train_dataframe['GarageType is CarPort'] = (train_dataframe['GarageType'] == 'CarPort').astype(int)
train_dataframe['GarageType is Detchd'] = (train_dataframe['GarageType'] == 'Detchd').astype(int)
train_dataframe['GarageType is NA'] = (train_dataframe['GarageType'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['GarageType'])

train_dataframe['GarageYrBlt < 1961'] = (train_dataframe['GarageYrBlt'] <= 1961).astype(int)
train_dataframe['GarageYrBlt < 1980'] = ((train_dataframe['GarageYrBlt'] > 1961) & (train_dataframe['GarageYrBlt'] <= 1980)).astype(int)
train_dataframe['GarageYrBlt < 2002'] = ((train_dataframe['GarageYrBlt'] > 1980) & (train_dataframe['GarageYrBlt'] <= 2002)).astype(int)
train_dataframe['GarageYrBlt > 2002'] = (train_dataframe['GarageYrBlt'] > 2002).astype(int)
train_dataframe = train_dataframe.drop(columns = ['GarageYrBlt'])

train_dataframe['GarageFinish is Fin'] = (train_dataframe['GarageFinish'] == 'Fin').astype(int)
train_dataframe['GarageFinish is RFn'] = (train_dataframe['GarageFinish'] == 'RFn').astype(int)
train_dataframe['GarageFinish is Unf'] = (train_dataframe['GarageFinish'] == 'Unf').astype(int)
train_dataframe['GarageFinish is NA'] = (train_dataframe['GarageFinish'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['GarageFinish'])

train_dataframe['GarageCars < 2'] = (train_dataframe['GarageCars'] <= 2).astype(int)
train_dataframe['GarageCars > 2'] = (train_dataframe['GarageCars'] > 2).astype(int)
train_dataframe = train_dataframe.drop(columns = ['GarageCars'])

train_dataframe['GarageArea < 334'] = (train_dataframe['GarageArea'] <= 334).astype(int)
train_dataframe['GarageArea < 480'] = ((train_dataframe['GarageArea'] > 334) & (train_dataframe['GarageArea'] <= 480)).astype(int)
train_dataframe['GarageArea < 576'] = ((train_dataframe['GarageArea'] > 480) & (train_dataframe['GarageArea'] <= 576)).astype(int)
train_dataframe['GarageArea > 576'] = (train_dataframe['GarageArea'] > 576).astype(int)
train_dataframe = train_dataframe.drop(columns = ['GarageArea'])

train_dataframe['GarageQual is Ex'] = (train_dataframe['GarageQual'] == 'Ex').astype(int)
train_dataframe['GarageQual is Gd'] = (train_dataframe['GarageQual'] == 'Gd').astype(int)
train_dataframe['GarageQual is TA'] = (train_dataframe['GarageQual'] == 'TA').astype(int)
train_dataframe['GarageQual is Fa'] = (train_dataframe['GarageQual'] == 'Fa').astype(int)
train_dataframe['GarageQual is Po'] = (train_dataframe['GarageQual'] == 'Po').astype(int)
train_dataframe['GarageQual is NA'] = (train_dataframe['GarageQual'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['GarageQual'])

train_dataframe['GarageCond is Ex'] = (train_dataframe['GarageCond'] == 'Ex').astype(int)
train_dataframe['GarageCond is Gd'] = (train_dataframe['GarageCond'] == 'Gd').astype(int)
train_dataframe['GarageCond is TA'] = (train_dataframe['GarageCond'] == 'TA').astype(int)
train_dataframe['GarageCond is Fa'] = (train_dataframe['GarageCond'] == 'Fa').astype(int)
train_dataframe['GarageCond is Po'] = (train_dataframe['GarageCond'] == 'Po').astype(int)
train_dataframe['GarageCond is NA'] = (train_dataframe['GarageCond'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['GarageCond'])

train_dataframe['PavedDrive is Y'] = (train_dataframe['PavedDrive'] == 'Y').astype(int)
train_dataframe['PavedDrive is P'] = (train_dataframe['PavedDrive'] == 'P').astype(int)
train_dataframe['PavedDrive is N'] = (train_dataframe['PavedDrive'] == 'N').astype(int)
train_dataframe = train_dataframe.drop(columns = ['PavedDrive'])

train_dataframe['WoodDeckSF < 168'] = (train_dataframe['WoodDeckSF'] <= 168).astype(int)
train_dataframe['WoodDeckSF > 168'] = (train_dataframe['WoodDeckSF'] > 168).astype(int)
train_dataframe = train_dataframe.drop(columns = ['WoodDeckSF'])

train_dataframe['OpenPorchSF < 25'] = (train_dataframe['OpenPorchSF'] <= 25).astype(int)
train_dataframe['OpenPorchSF < 68'] = ((train_dataframe['OpenPorchSF'] > 25) & (train_dataframe['OpenPorchSF'] <= 68)).astype(int)
train_dataframe['OpenPorchSF > 68'] = (train_dataframe['OpenPorchSF'] > 68).astype(int)
train_dataframe = train_dataframe.drop(columns = ['OpenPorchSF'])

train_dataframe['EnclosedPorch = 0'] = (train_dataframe['EnclosedPorch'] == 0).astype(int)
train_dataframe['EnclosedPorch > 0'] = (train_dataframe['EnclosedPorch'] > 0).astype(int)
train_dataframe = train_dataframe.drop(columns = ['EnclosedPorch'])

train_dataframe['3SsnPorch = 0'] = (train_dataframe['3SsnPorch'] == 0).astype(int)
train_dataframe['3SsnPorch > 0'] = (train_dataframe['3SsnPorch'] > 0).astype(int)
train_dataframe = train_dataframe.drop(columns = ['3SsnPorch'])

train_dataframe['ScreenPorch = 0'] = (train_dataframe['ScreenPorch'] == 0).astype(int)
train_dataframe['ScreenPorch > 0'] = (train_dataframe['ScreenPorch'] > 0).astype(int)
train_dataframe = train_dataframe.drop(columns = ['ScreenPorch'])

train_dataframe['PoolArea = 0'] = (train_dataframe['PoolArea'] == 0).astype(int)
train_dataframe['PoolArea > 0'] = (train_dataframe['PoolArea'] > 0).astype(int)
train_dataframe = train_dataframe.drop(columns = ['PoolArea'])

train_dataframe['PoolQC is Ex'] = (train_dataframe['PoolQC'] == 'Ex').astype(int)
train_dataframe['PoolQC is Gd'] = (train_dataframe['PoolQC'] == 'Gd').astype(int)
train_dataframe['PoolQC is TA'] = (train_dataframe['PoolQC'] == 'TA').astype(int)
train_dataframe['PoolQC is Fa'] = (train_dataframe['PoolQC'] == 'Fa').astype(int)
train_dataframe['PoolQC is NA'] = (train_dataframe['PoolQC'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['PoolQC'])

train_dataframe['Fence is GdPrv'] = (train_dataframe['Fence'] == 'GdPrv').astype(int)
train_dataframe['Fence is MnPrv'] = (train_dataframe['Fence'] == 'MnPrv').astype(int)
train_dataframe['Fence is GdWo'] = (train_dataframe['Fence'] == 'GdWo').astype(int)
train_dataframe['Fence is MnWw'] = (train_dataframe['Fence'] == 'MnWw').astype(int)
train_dataframe['Fence is NA'] = (train_dataframe['Fence'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['Fence'])

train_dataframe['MiscFeature is Elev'] = (train_dataframe['MiscFeature'] == 'Elev').astype(int)
train_dataframe['MiscFeature is Gar2'] = (train_dataframe['MiscFeature'] == 'Gar2').astype(int)
train_dataframe['MiscFeature is Othr'] = (train_dataframe['MiscFeature'] == 'Othr').astype(int)
train_dataframe['MiscFeature is Shed'] = (train_dataframe['MiscFeature'] == 'Shed').astype(int)
train_dataframe['MiscFeature is TenC'] = (train_dataframe['MiscFeature'] == 'TenC').astype(int)
train_dataframe['MiscFeature is NA'] = (train_dataframe['MiscFeature'] == 'NA').astype(int)
train_dataframe = train_dataframe.drop(columns = ['MiscFeature'])

train_dataframe['MiscVal = 0'] = (train_dataframe['MiscVal'] == 0).astype(int)
train_dataframe['MiscVal > 0'] = (train_dataframe['MiscVal'] > 0).astype(int)
train_dataframe = train_dataframe.drop(columns = ['MiscVal'])

train_dataframe['MoSold < 5'] = (train_dataframe['MoSold'] <= 5).astype(int)
train_dataframe['MoSold < 6'] = ((train_dataframe['MoSold'] > 5) & (train_dataframe['MoSold'] <= 6)).astype(int)
train_dataframe['MoSold < 8'] = ((train_dataframe['MoSold'] > 6) & (train_dataframe['MoSold'] <= 8)).astype(int)
train_dataframe['MoSold > 8'] = (train_dataframe['MoSold'] > 8).astype(int)
train_dataframe = train_dataframe.drop(columns = ['MoSold'])

train_dataframe['YrSold < 2007'] = (train_dataframe['YrSold'] <= 2007).astype(int)
train_dataframe['YrSold < 2008'] = ((train_dataframe['YrSold'] > 2007) & (train_dataframe['YrSold'] <= 2008)).astype(int)
train_dataframe['YrSold < 2009'] = ((train_dataframe['YrSold'] > 2008) & (train_dataframe['YrSold'] <= 2009)).astype(int)
train_dataframe['YrSold > 2009'] = (train_dataframe['YrSold'] > 2009).astype(int)
train_dataframe = train_dataframe.drop(columns = ['YrSold'])

train_dataframe['SaleType is WD'] = (train_dataframe['SaleType'] == 'WD').astype(int)
train_dataframe['SaleType is CWD'] = (train_dataframe['SaleType'] == 'CWD').astype(int)
train_dataframe['SaleType is VWD'] = (train_dataframe['SaleType'] == 'VWD').astype(int)
train_dataframe['SaleType is New'] = (train_dataframe['SaleType'] == 'New').astype(int)
train_dataframe['SaleType is COD'] = (train_dataframe['SaleType'] == 'COD').astype(int)
train_dataframe['SaleType is Con'] = (train_dataframe['SaleType'] == 'Con').astype(int)
train_dataframe['SaleType is ConLw'] = (train_dataframe['SaleType'] == 'ConLw').astype(int)
train_dataframe['SaleType is ConLI'] = (train_dataframe['SaleType'] == 'ConLI').astype(int)
train_dataframe['SaleType is ConLD'] = (train_dataframe['SaleType'] == 'ConLD').astype(int)
train_dataframe['SaleType is Oth'] = (train_dataframe['SaleType'] == 'Oth').astype(int)
train_dataframe = train_dataframe.drop(columns = ['SaleType'])

train_dataframe['SaleCondition is Normal'] = (train_dataframe['SaleCondition'] == 'Normal').astype(int)
train_dataframe['SaleCondition is Abnorml'] = (train_dataframe['SaleCondition'] == 'Abnorml').astype(int)
train_dataframe['SaleCondition is AdjLand'] = (train_dataframe['SaleCondition'] == 'AdjLand').astype(int)
train_dataframe['SaleCondition is Alloca'] = (train_dataframe['SaleCondition'] == 'Alloca').astype(int)
train_dataframe['SaleCondition is Family'] = (train_dataframe['SaleCondition'] == 'Family').astype(int)
train_dataframe['SaleCondition is Partial'] = (train_dataframe['SaleCondition'] == 'Partial').astype(int)
train_dataframe = train_dataframe.drop(columns = ['SaleCondition'])


train_dataframe.to_csv ('C:/Users/Elena/Desktop/new_data.csv', index= False )
